CCS PCM C Compiler, Version 5.076, 56587               06-mar.-20 11:24

               Filename:   E:\FABIO\LOI\Electronica IV-Lab\Coidgos C\Btnpolling\main.lst

               ROM used:   133 words (3%)
                           Largest free fragment is 2048
               RAM used:   14 (5%) at main() level
                           14 (5%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   065
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  25
0008:  MOVF   7F,W
0009:  MOVWF  24
000A:  MOVF   0A,W
000B:  MOVWF  2B
000C:  CLRF   0A
000D:  SWAPF  24,F
000E:  MOVF   04,W
000F:  MOVWF  26
0010:  MOVF   20,W
0011:  MOVWF  27
0012:  MOVF   21,W
0013:  MOVWF  28
0014:  MOVF   22,W
0015:  MOVWF  29
0016:  MOVF   23,W
0017:  MOVWF  2A
0018:  BCF    03.7
0019:  BCF    03.5
001A:  MOVLW  8C
001B:  MOVWF  04
001C:  BTFSS  00.0
001D:  GOTO   020
001E:  BTFSC  0C.0
001F:  GOTO   031
0020:  MOVF   26,W
0021:  MOVWF  04
0022:  MOVF   27,W
0023:  MOVWF  20
0024:  MOVF   28,W
0025:  MOVWF  21
0026:  MOVF   29,W
0027:  MOVWF  22
0028:  MOVF   2A,W
0029:  MOVWF  23
002A:  MOVF   2B,W
002B:  MOVWF  0A
002C:  SWAPF  25,W
002D:  MOVWF  03
002E:  SWAPF  7F,F
002F:  SWAPF  7F,W
0030:  RETFIE
0031:  BCF    0A.3
0032:  GOTO   033
.................... #include <16F688.h> 
.................... //////////// Standard Header file for the PIC16F688 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F688 
....................  
.................... #list 
....................  
.................... #device ADC=10 
....................  
.................... #FUSES PUT                      //Power Up Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
....................  
.................... #use delay(internal=8000000) 
....................  
.................... #define Led1  PIN_C0 
.................... #define Led2  PIN_C5 
.................... #define Led3  PIN_C4 
.................... #define Btn1  PIN_C1 
.................... #define Btn2  PIN_C2 
....................  
.................... int8  var1; 
.................... #bit  F1 = Var1.0 
.................... #bit  F2 = Var1.1 
....................  
.................... #INT_TIMER1 
.................... void  TIMER1_isr(void)  
.................... {  output_toggle(Led1); 
0033:  BSF    03.5
0034:  BCF    07.0
0035:  MOVLW  01
0036:  BCF    03.5
0037:  XORWF  07,F
....................  
....................    
....................           if(!input(Btn1) && !F1){ 
0038:  BSF    03.5
0039:  BSF    07.1
003A:  BCF    03.5
003B:  BTFSC  07.1
003C:  GOTO   046
003D:  BTFSC  2C.0
003E:  GOTO   046
....................             output_toggle(Led2); 
003F:  BSF    03.5
0040:  BCF    07.5
0041:  MOVLW  20
0042:  BCF    03.5
0043:  XORWF  07,F
....................             F1=1; 
0044:  BSF    2C.0
....................           }else if(input(Btn1) && F1){ F1=0; } 
0045:  GOTO   04D
0046:  BSF    03.5
0047:  BSF    07.1
0048:  BCF    03.5
0049:  BTFSS  07.1
004A:  GOTO   04D
004B:  BTFSC  2C.0
004C:  BCF    2C.0
....................            
....................          if(!input(Btn2) && !F2){ 
004D:  BSF    03.5
004E:  BSF    07.2
004F:  BCF    03.5
0050:  BTFSC  07.2
0051:  GOTO   05B
0052:  BTFSC  2C.1
0053:  GOTO   05B
....................             output_toggle(Led3); 
0054:  BSF    03.5
0055:  BCF    07.4
0056:  MOVLW  10
0057:  BCF    03.5
0058:  XORWF  07,F
....................             F2=1; 
0059:  BSF    2C.1
....................           }else if(input(Btn2) && F2){ F2=0; } 
005A:  GOTO   062
005B:  BSF    03.5
005C:  BSF    07.2
005D:  BCF    03.5
005E:  BTFSS  07.2
005F:  GOTO   062
0060:  BTFSC  2C.1
0061:  BCF    2C.1
....................       //TODO: User Code 
....................      
0062:  BCF    0C.0
0063:  BCF    0A.3
0064:  GOTO   020
.................... } 
....................  
.................... void main() 
0065:  MOVF   03,W
0066:  ANDLW  1F
0067:  MOVWF  03
0068:  MOVLW  71
0069:  BSF    03.5
006A:  MOVWF  0F
006B:  CLRF   10
006C:  MOVF   0F,W
006D:  BCF    03.5
006E:  BCF    1F.6
006F:  MOVLW  00
0070:  BSF    03.5
0071:  MOVWF  11
0072:  BCF    03.5
0073:  CLRF   1A
0074:  MOVLW  07
0075:  MOVWF  19
0076:  BCF    03.7
.................... { 
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_4);      //131 ms overflow 
0077:  MOVLW  25
0078:  MOVWF  10
....................    setup_oscillator(OSC_8MHZ); 
0079:  MOVLW  71
007A:  BSF    03.5
007B:  MOVWF  0F
007C:  CLRF   10
007D:  MOVF   0F,W
....................  
....................    enable_interrupts(INT_TIMER1); 
007E:  BSF    0C.0
....................    enable_interrupts(GLOBAL); 
007F:  MOVLW  C0
0080:  BCF    03.5
0081:  IORWF  0B,F
....................     Var1=0; 
0082:  CLRF   2C
....................    while(TRUE) 
....................    { 
0083:  GOTO   083
....................  
....................        
....................    } 
....................  
.................... } 
0084:  SLEEP

Configuration Fuses:
   Word  1: 3CE4   INTRC_IO NOWDT PUT MCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN
